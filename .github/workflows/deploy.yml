name: Deploy to GitHub Pages

on:
  # `main` ブランチにプッシュするたびにワークフローを実行します
  # 異なるブランチ名を使用する場合は、`main` をブランチ名に置き換えてください
  push:
    branches: [release]
  # このワークフローを GitHub の Actions タブから手動で実行できるようにします。
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Upload node_modules
        uses: actions/upload-artifact@v3
        with:
          name: node_modules
          path: node_modules
  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - name: Download node_modules
        uses: actions/download-artifact@v3
        with:
          name: node_modules
          path: node_modules

      - name: Setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install, build, and upload your site
        uses: withastro/action@v1
        with:
          # path: . # リポジトリ内のAstroプロジェクトのルートロケーション。(オプション)
          node-version: 20 # サイト構築に使用するNodeのバージョン。デフォルトは18です。（オプション）
          package-manager: bun@latest # 依存関係のインストールとサイトのビルドに使用する Node パッケージマネージャ。ロックファイルに基づいて自動的に検出されます。(オプション)
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@1
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          projectName: kyeshimizu-com
          directory: ./dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: ./functions
