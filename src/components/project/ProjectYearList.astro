---
import { getCollection } from 'astro:content'

import { Suspense } from 'react'
import { Loader2 } from 'lucide-react'
import ProjectListItem from './ProjectListItem'

const { tags } = Astro.props

const posts = await getCollection('projects')

// Filter posts by tag if tag is provided
const filteredPosts = tags ? posts.filter((post) => post.data.tags.includes(tags)) : posts

// Group posts by year
const postsByYear = filteredPosts.reduce<{ [year: string]: typeof posts }>((acc, post) => {
  const year = new Date(post.data.date).getFullYear()
  if (!acc[year]) {
    acc[year] = []
  }
  acc[year].push(post)
  return acc
}, {})

// Sort years in descending order
const sortedYears = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a))
---

<div class={'mb-14 w-100 overflow-hidden'} transition:animate='slide'>
  {
    sortedYears.map((year) => (
      <div class='pb-16'>
        <span class={' block float-right text-xs leading-4 tracking-wide '}>{year}</span>
        <ul class={'flex w-11/12 gap-x-20 gap-y-11 flex-wrap md:flex-row flex-col'}>
          {postsByYear[year].map((post) => (
            <ProjectListItem
              client:only='react'
              title={post.data.title}
              date={post.data.date}
              tags={post.data.tags}
              selectedTag={tags}
            />
          ))}
        </ul>
      </div>
    ))
  }
</div>
