---
import { getCollection } from 'astro:content'

import AboutAccordion from '../components/AboutAccordion/AboutAccordion'
import type {
  AwardTableRow,
  ExhibitionTableRow,
  GrantTableRow,
  MediaTableRow,
  PublicationTableRow,
  TalkTableRow,
} from '../components/AboutAccordion/TableData'
import { Spacer } from '../components/layout/Spacer'
import SocialButtonRow from '../components/SocialButtonRow'
import { Separator } from '../components/ui/separator'
import { Content as AboutContent } from '../content/about/about.mdx'
import BaseLayout from '../layouts/BaseLayout.astro'
import aboutImage from '../content/about/images/profile.jpg'
import { Picture } from 'astro:assets'
const allPosts = await getCollection('projects')
---

<BaseLayout>
  <div class='flex mt-8 pb-8 xl:flex-row flex-col gap-4 flex-1 w-auto'>
    <Picture
      class={'transition-all hover:scale-95 object-contain md:h-[500px] w-auto'}
      widths={[360, 768, 1024, 1440]}
      src={aboutImage}
      formats={['avif', 'webp']}
      alt=''
      sizes={'(min-width: 360px) (min-width: 768px) (min-width:1024px)  (min-width:1440px)'}
      pictureAttributes={{
        style: 'display: flex; justify-content: center; align-items: center; ',
      }}
    />

    <div class='flex flex-col gap-2 min-w-0 flex-1'>
      <AboutContent />
      <Spacer size={10} />
      <SocialButtonRow client:only='react' />
    </div>
  </div>
  <!-- <PhotoAccordion client:only='react' /> -->

  <Separator />
  <AboutAccordion
    client:only='react'
    PublicationData={[
      {
        work: '',
        conference_name: 'PNAS',
        reference:
          'Shirado, H., Kasahara, S., & Christakis, N. A. (2023). Emergence and collapse of reciprocity in semiautomatic driving coordination experiments with humans. Proceedings of the National Academy of Sciences of the United States of America, 120(51), e2307804120. https://doi.org/10.1073/pnas.2307804120',
        url: 'https://www.pnas.org/doi/10.1073/pnas.2307804120',
        year: 2023,
        pdf_path: '',
      },
      ...allPosts
        .flatMap((post) =>
          (post.data.publications as PublicationTableRow[]).map((publication) => ({
            ...publication,
            work: post.data.title,
          })),
        )
        .sort((a, b) => b.year - a.year),
    ]}
    MediaData={[
      ...allPosts
        .flatMap((post) =>
          (post.data.media as MediaTableRow[]).map((media) => ({
            ...media,
            work: post.data.title,
          })),
        )
        .sort((a, b) => b.year - a.year),
    ]}
    ExhibitionData={allPosts
      .flatMap((post) =>
        (post.data.exhibitions as ExhibitionTableRow[]).map((exhibition) => ({
          ...exhibition,
          work: post.data.title,
        })),
      )
      .sort((a, b) => {
        const startDateA = new Date(a.date.split(' - ')[0])
        const startDateB = new Date(b.date.split(' - ')[0])
        return startDateB.getTime() - startDateA.getTime()
      })}
    AwardData={allPosts
      .flatMap((post) =>
        (post.data.awards as AwardTableRow[]).map((award) => ({
          ...award,
          work: post.data.title,
        })),
      )
      .sort((a, b) => b.year - a.year)}
    TalkData={allPosts
      .flatMap((post) =>
        (post.data.talks as TalkTableRow[]).map((talk) => ({
          ...talk,
          work: post.data.title,
        })),
      )
      .sort((a, b) => b.year - a.year)}
    TeachingData={[
      {
        workshop_name: 'TA for Data Driven Art Summer School with Yasuaki Kakehi, Daito Manabe',
        place: 'Keio University SFC',
        date: '2018',
      },
      {
        workshop_name: 'TA for Data Driven Art Summer School with Yasuaki Kakehi, Daito Manabe',
        place: 'Keio University SFC',
        date: '2017',
      },
      {
        workshop_name: 'TA for Moving Picture with Saito Tatsuya',
        place: 'Keio University SFC',
        date: '2018',
      },
    ]}
    GrantData={allPosts
      .flatMap((post) =>
        (post.data.grants as GrantTableRow[]).map((grant) => ({
          ...grant,
          work: post.data.title,
        })),
      )
      .sort((a, b) => b.year - a.year)}
  />
</BaseLayout>
